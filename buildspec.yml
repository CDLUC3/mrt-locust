version: 0.2

phases:

  build:
    on-failure: ABORT
    commands:
    - |
      pip -q install locust
      pip -q install bs4

      MS_LOGIN=8000
      MS_GENERAL=2000

      if [[ "$LOCUST_TEST_ENV" == "production" ]]
      then
        MERRITTURL=https://merritt.cdlib.org
        SSMPATH=/uc3/mrt/dev/integ-tests/for-prod
        USERCOUNT=10
      else
        MERRITTURL=https://merritt-stage.cdlib.org
        SSMPATH=/uc3/mrt/dev/integ-tests/for-stage
        USERCOUNT=6
      fi

      if [[ "$LOCUST_MODE" == "foo" ]]
      then
        DURATION=2m
      else
        DURATION=2m
      fi

      echo "Run 2 minute locust test"
      export MERRITTUSER=$(aws ssm get-parameter --name ${SSMPATH}/user --query Parameter.Value --output text)
      export MERRITTPASS=$(aws ssm get-parameter --name ${SSMPATH}/password --with-decryption --query Parameter.Value --output text)
      locust --headless -u ${USERCOUNT} -t ${DURATION} -H $MERRITTURL --only-summary -L ERROR --csv out.csv --reset-stats --json > out.json

      echo "Analyze Failures"
      jq ".[] | select(.num_failures>0) | {name: .name, fail: .num_failures}" out.json > fail.json
      cat fail.json
      
      echo "Analyze 80th percentile response times"
      jq "[.[] | {name: .name, resp_ms_80pct: (.response_times | (. as \$s | [([(keys[] as \$k | (\$k | tonumber))] | sort_by(.)) | .[] as \$v | range(\$s[\$v|tostring]) | \$v]) as \$vals | \$vals[(\$vals | length) * .8 -1])}]" out.json > out80.json
      cat out80.json

      echo "Test for failure... fail if file is not empty"
      if [ -s fail.json ]; then false; fi

      echo "Test for login response times greater than 8 seconds... fail if file is not empty"
      jq '[. | select(.resp_ms_80pct > ${MS_LOGIN}) | select(.name=="/guest_login")]' out80.json > out.test.json
      if [ -s out.test.json ]; then false; fi

      echo "Test for response times greater than 2 seconds... fail if file is not empty"
      jq '[. | select(.resp_ms_80pct > ${MS_GENERAL}) | select(.name!="/guest_login")]' out80.json > out.test.json
      if [ -s out.test.json ]; then false; fi
